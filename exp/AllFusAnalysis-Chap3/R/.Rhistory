"Race 4" = "navy",
"Tropical Race 4" = "green4"),
fontsize_col = 5,
fontsize = 16,
treeheight_row = 100,
treeheight_col = 30,
angle_col = 90,
cutree_rows = 24,
filename = "./EffectorsHeatmap.pdf", # extra lines to I can save the image
height = 30,
width = 38))
knitr::opts_chunk$set(echo = TRUE)
# # ---- Install required packages ---- #
# install.packages("ggtree")
# if (!requireNamespace("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
# BiocManager::install("ggtree")
# install.packages('devtools')
# devtools::install_github("YuLab-SMU/ggtreeExtra")
# install.packages('tidytree')
# install.packages('ggpubr')
# install.packages('nortest')
# ---- Load required libraries ---- #
#for stats
library(dplyr)
library(tidyr)
library(tidytree)
library(tidyverse)
library(dplyr)
library(forcats)
library(ggplot2)
library(ggthemes)
library(viridis)
library(ggpubr)
library(nortest)
library(pheatmap)
# for phylogeny
library(phytools)
library(ggtree)
library(ggtreeExtra)
library(ape)
#for heatmaps
library(textshape)
library(RColorBrewer)
library(ggnewscale)
library(pheatmap)
# ---- Set dirs and load files ---- #
setwd("/Volumes/Jamie_EXT/Projects/Maei/exp/AllFusAnalysis-Chap3/R/")
# Specify  path to  Newick file
tree_file <- "./MaeiTEFPhylo.treefile"
# Load heatmap data matrix from the CSV file
data <- read.csv("./PhyloHeatmapData.csv")  # Adjust the path accordingly
# Load phylogeny meta date from the CSV file
metadata <- read.csv("./PhyloMetaData.csv")
# ---- prepare metadata ---- #
# ensure its a df
metadata <- as.data.frame(metadata)
# clear empty values
metadata$fsp[metadata$fsp==""] <- NA # set empty cells in fsp column to NA
metadata$race[metadata$race==""] <- NA # set empty cells in race column to NA
#create a column for full fsp.
metadata <- metadata %>% unite("full_name", c(species,fsp), sep = " fsp. ", remove = F, na.rm = T)
# build df for fsp so we can add it as a colour scale to the tree
fsp_df <- data.frame("fsp" = metadata[,c("fsp")] )
rownames(fsp_df) <- metadata$label
# ---- Prepare the tree ---- #
# Read the phylogenetic tree from the Newick file
unrootedtree <- read.tree(tree_file)
# root the tree
tree <- root(unrootedtree, outgroup = c("F._graminearum_PH-1"))
# Build tree skeleton
p <- ggtree(tree,ladderize = F)  %<+% metadata
# ---- View the tree ---- #
# Useful for visualusing nodes etc
p_nodes <- p +
geom_text2(aes(label = parent), hjust = -0.1, size = 3)+ # add node names
geom_tiplab(aes(label = label), offset = 0.005) +
coord_cartesian(clip = "off") # stop names being trimmed off
# ---- Build the tree plot ---- #
p2 <- p +
geom_treescale(x = 0, y = 1, width = 0.004) +
geom_tiplab(aes(label = full_name)) +
geom_tiplab(aes(label = isolate_code), color = "grey20", offset = 0.015, linetype = "blank", geom = "text", align = TRUE) +
geom_tiplab(aes(label = race), color = "grey20", offset = 0.024, linetype = "blank", geom = "text", align = TRUE)+
geom_tippoint(aes(shape = source)) +
geom_rootedge() +
theme(legend.position = "bottom")
#add extra scale so we can plot fsp with colour
p3 <- p2 + new_scale_fill()
# add race data
p4 <- gheatmap(p3, fsp_df,
offset = 0.008,
width = 0.03,
color = "grey20",
colnames = FALSE) +
scale_fill_manual(name = "Fsp",
values = c("blue","purple","goldenrod4","grey90","gold","brown", "lightpink","darkolivegreen3", "grey20", "tomato", "lavender", "tan", "palegreen4", "coral", "yellow"), na.value = "grey") +
theme(legend.position = "bottom",
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
legend.box = "vertical", legend.margin = margin())+
guides(shape = guide_legend(override.aes = list(size = 2)))
# plot it
plot(p4)
##save basic tree
ggsave("BasicTEFPhylo.png", width = 30, height = 15)
# ----  tidy the data for stats ----#
#subset the df so that we can perform stats on genome size and mimp/cand eff distribution
stats_data <- select(metadata, "species", "fsp", "isolate_code","no._mimps","no._cand_effs","genome_size") %>%
#Rename the columns to reduce the long titles
dplyr::rename(isolate=isolate_code,
mimps=no._mimps,
candidate_effectors=no._cand_effs,
assembly_size =genome_size)
#we need to drop rows which were not included in the Maei analysis
stats_data <- stats_data %>%
drop_na(candidate_effectors)
# view the table for stats data
knitr::kable(stats_data)
# ---- sumarise the data ---- #
summary(stats_data$mimps)
summary(stats_data$candidate_effectors)
summary(stats_data$assembly_size)
# ---- subset the fsp of interest ---- #
# cubense
foc_stats <- subset(metadata, grepl("Fo._fsp._cubense", label))
summary(foc_stats)
# lactucae
fola_stats <- subset(metadata, grepl("Fo._fsp._lactucae", label))
summary(fola_stats)
# apii
foa_stats <- subset(metadata, grepl("Fo._fsp._apii", label))
summary(foa_stats)
# coriandrii
foci_stats <- subset(metadata, grepl("Fo._fsp._coriandrii", label))
foci_stats <- foci_stats %>%
drop_na(no._mimps)
summary(foci_stats)
# ---- Build the histograms ---- #
# visualise the mimp distribution
mimps_histo <- ggplot(stats_data, aes(x = mimps)) +
geom_histogram(fill = "#0c4c8a", colour = "grey20" ) +
theme_bw()
# visualise the mimp distribution
cands_histo <- ggplot(stats_data, aes(x = candidate_effectors)) +
geom_histogram(fill = "#0c4c8a", colour = "grey20" ) +
theme_bw()
# visualise the mimp distribution
size_histo <- ggplot(stats_data, aes(x = assembly_size)) +
geom_histogram(fill = "#0c4c8a", colour = "grey20" ) +
theme_bw()
# ---- Build the scatter plots ---- #
#Correlation between the total number of effectors and  the total number of mimps
#Visualize the relationship
effectors_v_mimps_relat <- ggplot(stats_data) +
aes(x = candidate_effectors, y = mimps) +
geom_point(colour = "#0c4c8a") +
geom_smooth(method = "lm", se = FALSE, color = "grey20") +
theme_bw()
#Correlation between  the total number of effectors and Assembly Size?
#Visualize the relationship
effectors_v_assembly_size_relat <- ggplot(stats_data) +
aes(x = candidate_effectors, y = assembly_size) +
geom_point(colour = "#0c4c8a") +
geom_smooth(method = "lm", se = FALSE, color = "grey20") +
theme_bw()
#Correlation between the total number of mimps and Assembly Size?
#Visualize the relationship
mimps_v_assembly_size_relat <- ggplot(stats_data) +
aes(x = mimps, y = assembly_size) +
geom_point(colour = "#0c4c8a") +
geom_smooth(method = "lm", se = FALSE, color = "grey20") +
theme_bw()
# combine the plots
sats_plots <- ggarrange(mimps_histo, cands_histo, size_histo, mimps_v_assembly_size_relat, effectors_v_assembly_size_relat, effectors_v_mimps_relat,
ncol = 3,
nrow = 2)
# plot the combined plots
plot(sats_plots)
#save it
ggsave("./SummaryStats.png", width = 20, height = 15)
#Correlation test:
effectors_v_mimps <- cor.test(stats_data$candidate_effectors, stats_data$mimps, )
effectors_v_mimps
#Correlation test:
effectors_v_assembly_size <- cor.test(stats_data$candidate_effectors, stats_data$assembly_size)
effectors_v_assembly_size
#Correlation test:
mimps_v_assembly_size <- cor.test(stats_data$mimps, stats_data$assembly_size)
mimps_v_assembly_size
# ---- Prepare Data for plotting --- #
#Extract the isolate, assembly size, total number of mimps and effectors columns.
stats_plot_data <- select(metadata,"species", "species_group", "fsp", "isolate_code","genome_size","no._mimps","no._cand_effs") %>%
#Rename the columns to reduce the long titles
dplyr::rename(isolate=isolate_code,
mimps=no._mimps,
candidate_effectors=no._cand_effs,
assembly_size =genome_size) %>%
#We need to drop rows which were not included in the Maei analysis
drop_na(candidate_effectors) %>%
#Merge/group the fsp and isolate code columns so that both can be plotted.
unite(ID, c(fsp, isolate), sep = " ", remove = T, na.rm = T) %>%
#Merge/group the mimps and effector columns so that both can be plotted per strain/isolate.
pivot_longer(cols = c(mimps,candidate_effectors), names_to="Legend", values_to="mimps_and_candidate_effectors") %>%
mutate(Legend = factor(Legend, levels=c('mimps','candidate_effectors')))
#Build plot
#----------
#Generate scale for Assembly size data
scale_right <- 100 / max(stats_plot_data$mimps_and_candidate_effectors)
#Build Plot
stats_plot <- ggplot(aes(x=reorder(ID, mimps_and_candidate_effectors)),   #Create X axis, which contains all strains/isolates assessed ordered by the total number of mimps and effectors
data = stats_plot_data)+
geom_bar(aes(y=mimps_and_candidate_effectors,                  #Plot the total number of mimps and effectors
fill = Legend),
colour="grey20",
position= 'dodge',                          #Ensure the bars are not stacked.
stat='identity')+                           #Add the mimp or predicted effector content.
scale_fill_manual("Legend", values=c("candidate_effectors" = "darkolivegreen", "mimps" = "#DDE0DA"), label=c("mimps", "candidate effectors"))+ #for some reason the labels have to be written the other way round...?
facet_grid(~species_group,
scales = "free_x",                        # Let the x axis vary across facets.
space = "free_x",                         # Let the width of facets vary and force all bars to have the same width.
switch = "x")+                            # Move the facet labels to the bottom.
geom_point(aes(y=assembly_size /scale_right,         #Plot assemble size over the top of the bar chart.
colour = "Assembly Size",             #Add assembly size to the legend.
group = 1),
size = 3)+
scale_colour_manual(" ", values=c("Assembly Size" = "grey50"))+
theme_bw()+
theme(legend.box="verticle",
legend.title = element_blank(),
legend.position = "bottom")+
xlab("") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
theme(axis.text.x = element_text(angle = 90,         #Adjust the text orientation on the x axis
vjust = 0.5,
hjust=1,
size = 12))+
theme(axis.text = element_text(size = 12))+
scale_y_continuous(name= "Total number of mimps \nand candidate effectors", #Increase ticks on Y axis.
breaks = scales::pretty_breaks(n = 10),                     #Create regular breaks in the Y axis.
sec.axis = sec_axis( trans=~.*scale_right,                   #Insert second Y axis for the assembly size. Calculated using the right-hand scale.
name="Size of Assembly (Mb)",
breaks = scales::pretty_breaks(n = 15)
))
# print the plot
plot(stats_plot)
#Prepare png of file
ggsave("StatsOverview.png", width = 10, height = 10)
# ---- Prepare Data for plotting --- #
#Extract the isolate, assembly size, total number of mimps and effectors coloumns.
race_plot_data <- select(metadata,"species", "species_group", "fsp", "race" ,"isolate_code","genome_size","no._mimps","no._cand_effs") %>%
#Rename the columns to reduce the long titles
dplyr::rename(isolate=isolate_code,
mimps=no._mimps,
candidate_effectors=no._cand_effs,
assembly_size =genome_size) %>%
#We need to drop rows which were not included in the Maei analysis
drop_na(candidate_effectors) %>%
#Merge/group the mimps and effector columns so that both can be plotted per strain/isolate.
pivot_longer(cols = c(mimps,candidate_effectors), names_to="Legend", values_to="mimps_and_candidate_effectors") %>%
mutate(Legend = factor(Legend, levels=c('mimps','candidate_effectors')))
# ---- subset metadata ---- #
# extract only the fsp we are interested in and drop isolates which don't have a race classification
race_plot_data_subset <- subset(race_plot_data, grepl("lactucae|apii|cubense", fsp)) %>%
drop_na(race)
# ---- funky cheats to lable the facet plot nicely --- #
#set new labels
new_labels_y <- c("mimps" = "mimps", "candidate_effectors" = "candidate effectors")
new_labels_x <- c("apii" = "Fo. fsp. apii", "cubense" = "Fo. fsp. cubense", "lactucae" = "Fo. fsp. lactucae")
# ---- build plots ---- #
theme_set(theme_pubr()) #set the ggpubr theme
# build plots for candidate effectors and mimps
mimpsandcandeffs <- ggplot(race_plot_data_subset, aes(x=race, y=mimps_and_candidate_effectors)) + # plot race and mimp/candidate effector count
geom_boxplot(aes(fill = Legend)) +
facet_wrap(~ fsp, labeller = labeller(Legend = new_labels_y, fsp = new_labels_x), scales = "free_x") +  # split the plot by fsp and then mimps/candidate effectors
labs(x = "Race",
y = "Total number of mimps \nand candidate effectors") +
scale_fill_manual(values = c("candidate_effectors" = "darkolivegreen", "mimps" = "#DDE0DA"), label=c("mimps", "candidate effectors")) +
theme_bw() +
theme(strip.text.y = element_blank(),  # remove the side names as we have this shown in colour now.
panel.grid.major = element_blank(), # put the lines back in
legend.position = "bottom",
legend.title = element_blank())
#plot it
plot(mimpsandcandeffs)
#save the plot
ggsave("MimpsAndCandEffs_FspOfInterest.png", width = 10, height = 10)
# ---- subset the fsp of interest ---- #
# cubense
foc_stats_sum <- foc_stats %>%
group_by(race) %>%
summarize(count = n_distinct(label),
mean_mimp = mean(no._mimps),
min_mimp = min(no._mimps),
max_mimp= max(no._mimps),
mean_eff = mean(no._cand_effs),
min_eff = min(no._cand_effs),
max_eff = max(no._cand_effs),
sum_eff = sum(no._cand_effs))
# lactucae
fola_stats_sum <- fola_stats %>%
group_by(race) %>%
summarize(count = n_distinct(label),
mean_mimp = mean(no._mimps),
min_mimp = min(no._mimps),
max_mimp= max(no._mimps),
mean_eff = mean(no._cand_effs),
min_eff = min(no._cand_effs),
max_eff = max(no._cand_effs),
sum_eff = sum(no._cand_effs))
# apii
foa_stats_sum <- foa_stats  %>%
group_by(race) %>%
summarize(count = n_distinct(label),
mean_mimp = mean(no._mimps),
min_mimp = min(no._mimps),
max_mimp= max(no._mimps),
mean_eff = mean(no._cand_effs),
min_eff = min(no._cand_effs),
max_eff = max(no._cand_effs),
sum_eff = sum(no._cand_effs))
# print it nicely
knitr::kable(foc_stats_sum)
knitr::kable(fola_stats_sum)
knitr::kable(foa_stats_sum)
# ---- summarise the distribution of candidate effector clusters ---- #
# convert the matrix to a data frame
heatmap_df <- as.data.frame(heatmap_dat)
# count the number of columns to get the total number of CECs
total_CECs <- ncol(heatmap_df)
# total number of candidate effector clusters per assembly (as a dataframe)
cluster_distib <- enframe(colSums(t(heatmap_df[-1])))
#rename the value column
cluster_distib <- dplyr::rename(cluster_distib, no._CECs = value)
# merge the two data frames
metadata <- merge(metadata, cluster_distib, by.x = "label", by.y = "name", all.x = TRUE)
#subset the metadata ft
CEC_metadata <- select(metadata,"species", "species_group", "fsp", "race", "isolate_code","genome_size","no._mimps","no._cand_effs", "no._CECs")
# print it nicely
knitr::kable(CEC_metadata)
# # summarise it for chapter text
# summary(CEC_metadata)
# ---- Prep the heatmap data ---- #
# remove the row names temporarily
rownames_mat<- data[,1]
mat_data<- as.matrix(data[,-1])
#make data frame binary
binary_matrix <- as.matrix(mat_data)
binary_matrix[binary_matrix > 0] <- 1
#put rownames back
rownames(binary_matrix)<-rownames_mat
# ---- Cluster the heatmap data ---- #
# normalisiation is mandatory for clustering, but as my data is binary - i did not normalise.
# Compute hierarchical clustering of columns
heatmap_dat <- cluster_matrix(binary_matrix, method ="ward.D2")
# ---- Add metadata to heatmap ---- #
# first, select the data we want from metadata and make the "label column in metadata the row names"
heatmap_metadf <- select(metadata,"label", "species", "fsp", "race","no._mimps","no._cand_effs", "no._CECs") %>%
dplyr::rename(name=label,
CECs=no._CECs,
CEs = no._cand_effs,
mimps =no._mimps,) %>%
remove_rownames %>%
tibble::column_to_rownames(var="name")
# ---- pheatmap plot of CECs ---- #
effector_heatmap <-pheatmap(heatmap_df,
color = colorRampPalette(c("white", "black"))(2),
legend = T,
legend_breaks = c(0.75, 0.25),
legend_labels = c("Present", "Absent"),
drop_levels = T,
show_colnames = F,
clustering_distance_rows = "binary",
clustering_distance_cols = "binary",
cellwidth = 4,
cellheight = 20,
border_color = "white",
annotation_row = heatmap_metadf,
annotation_colors = list(
fsp = c(
"apii" = "blue",
"cepae" = "purple",
"conglutinans" = "goldenrod4",
"coriandrii" = "grey90",
"cubense" = "gold",
"lactucae" = "darkolivegreen3",
"lini" = "indianred",
"lycopersici" = "tomato",
"matthiolae" = "lavender",
"narcissus" = "yellow",
"niveum" = "palegreen4",
"rapae" = "slateblue",
"from rocket" = "tan",
"vasinfectum" = "steelblue",
"endophyte" = "brown"),
race = c(
"np" = "bisque",
"Race 1" = "gold4",
"Race 2" = "yellow",
"Race 3" = "lightblue",
"Race 4" = "navy",
"Tropical Race 4" = "green4"),
fontsize_col = 5,
fontsize = 16,
treeheight_row = 100,
treeheight_col = 30,
angle_col = 90,
cutree_rows = 24))
#You cant print and save a pheatmap, so i have just duplicated it all and hidden it from the markdown to save it.
# ---- Add metadata to heatmap ---- #
# first, select the data we want from metadata and make the "label column in metadata the row names"
heatmap_metadf <- select(metadata,"label", "species", "fsp", "race","no._mimps","no._cand_effs", "no._CECs") %>%
dplyr::rename(name=label,
CECs=no._CECs,
CEs = no._cand_effs,
mimps =no._mimps,) %>%
remove_rownames %>%
tibble::column_to_rownames(var="name")
# ---- pheatmap plot of CECs ---- #
effector_heatmap <-pheatmap(heatmap_df,
color = colorRampPalette(c("white", "black"))(2),
legend = T,
legend_breaks = c(0.75, 0.25),
legend_labels = c("Present", "Absent"),
drop_levels = T,
show_colnames = F,
clustering_distance_rows = "binary",
clustering_distance_cols = "binary",
cellwidth = 4,
cellheight = 20,
border_color = "white",
annotation_row = heatmap_metadf,
annotation_colors = list(
fsp = c(
"apii" = "blue",
"cepae" = "purple",
"conglutinans" = "goldenrod4",
"coriandrii" = "grey90",
"cubense" = "gold",
"lactucae" = "darkolivegreen3",
"lini" = "indianred",
"lycopersici" = "tomato",
"matthiolae" = "lavender",
"narcissus" = "yellow",
"niveum" = "palegreen4",
"rapae" = "slateblue",
"from rocket" = "tan",
"vasinfectum" = "steelblue",
"endophyte" = "brown"),
race = c(
"np" = "bisque",
"Race 1" = "gold4",
"Race 2" = "yellow",
"Race 3" = "lightblue",
"Race 4" = "navy",
"Tropical Race 4" = "green4"),
fontsize_col = 5,
fontsize = 16,
treeheight_row = 100,
treeheight_col = 30,
angle_col = 90,
cutree_rows = 24,
filename = "./EffectorsHeatmap.png", # extra lines to I can save the image
height = 30,
width = 38))
effector_heatmap <-pheatmap(heatmap_df,
color = colorRampPalette(c("white", "black"))(2),
legend = T,
legend_breaks = c(0.75, 0.25),
legend_labels = c("Present", "Absent"),
drop_levels = T,
show_colnames = F,
clustering_distance_rows = "binary",
clustering_distance_cols = "binary",
cellwidth = 4,
cellheight = 20,
border_color = "white",
annotation_row = heatmap_metadf,
annotation_colors = list(
fsp = c(
"apii" = "blue",
"cepae" = "purple",
"conglutinans" = "goldenrod4",
"coriandrii" = "grey90",
"cubense" = "gold",
"lactucae" = "darkolivegreen3",
"lini" = "indianred",
"lycopersici" = "tomato",
"matthiolae" = "lavender",
"narcissus" = "yellow",
"niveum" = "palegreen4",
"rapae" = "slateblue",
"from rocket" = "tan",
"vasinfectum" = "steelblue",
"endophyte" = "brown"),
race = c(
"np" = "bisque",
"Race 1" = "gold4",
"Race 2" = "yellow",
"Race 3" = "lightblue",
"Race 4" = "navy",
"Tropical Race 4" = "green4"),
fontsize_col = 5,
fontsize = 16,
treeheight_row = 100,
treeheight_col = 30,
angle_col = 90,
cutree_rows = 24,
filename = "/Volumes/Jamie_EXT/Projects/Maei/exp/AllFusAnalysis-Chap3/R/EffectorsHeatmap.png", # extra lines to I can save the image
height = 30,
width = 38))
